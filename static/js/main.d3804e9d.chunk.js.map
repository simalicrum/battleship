{"version":3,"sources":["Gameboard.js","Ship.js","Player.js","Square.js","Gamelog.js","App.js","index.js"],"names":["Gameboard","attacks","shipsOnBoard","ships","receiveAttack","xCoor","yCoor","placeShip","Ship","xOri","yOri","push","ship","i","length","allShipsSunk","every","isSunk","checkShipHit","j","hit","hits","Array","fill","position","Player","gameboard","takeTurn","enemyGameboard","Square","props","className","isShip","onClick","value","Gamelog","id","gamelog","map","index","key","arr","App","state","player","enemy","initialState","gameOver","handleClick","bind","cloneDeep","this","setState","newTurn","concat","enemyTurn","prevProps","prevState","resetBoard","xCoorEnemy","Math","floor","random","yCoorEnemy","renderPlayerSquare","renderEnemySquare","renderPlayerRow","renderEnemyRow","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3804e9d.chunk.js","sourcesContent":["const Gameboard = () => {\n  const attacks = [\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n  ];\n  const shipsOnBoard = [\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n    [false, false, false, false, false, false, false, false, false, false],\n  ];\n  let ships = [];\n  const checkShipHit = (xCoor, yCoor) => {\n    for (let j of ships) {\n      for (let i = 0; i < j.ship.length; i++) {\n        if (xCoor === j.xCoor + i * j.xOri && yCoor === j.yCoor + i * j.yOri) {\n          j.ship.hit(i);\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const receiveAttack = (xCoor, yCoor) => {\n    attacks[xCoor][yCoor] = \"X\";\n    //    return checkShipHit(xCoor, yCoor);\n  };\n  const placeShip = (Ship, xCoor, yCoor, xOri, yOri) => {\n    ships.push({\n      ship: Ship,\n      xCoor: xCoor,\n      yCoor: yCoor,\n      xOri: xOri,\n      yOri: yOri,\n    });\n    for (let i = 0; i < Ship.length; i++) {\n      shipsOnBoard[xCoor + i * xOri][yCoor + i * yOri] = true;\n    }\n  };\n  const allShipsSunk = () => {\n    return ships.every((i) => i.ship.isSunk());\n  };\n  return {\n    receiveAttack,\n    placeShip,\n    attacks,\n    ships,\n    allShipsSunk,\n    shipsOnBoard,\n    checkShipHit,\n  };\n};\n\nexport default Gameboard;\n","const Ship = (length) => {\n  let hits = Array(length).fill(false);\n  const hit = (position) => {\n    hits[position] = true;\n  };\n  const isSunk = () => {\n    return hits.every((i) => i === true);\n  };\n  return { hit, isSunk, length, hits };\n};\n\nexport default Ship;\n","const Player = (Gameboard) => {\n  let gameboard = Gameboard;\n  const takeTurn = (enemyGameboard, xCoor, yCoor) => {\n    return enemyGameboard.receiveAttack(xCoor, yCoor);\n  };\n  return { gameboard, takeTurn };\n};\n\nexport default Player;\n","import React from \"react\";\n\nfunction Square(props) {\n  return (\n    <button\n      className={props.isShip ? \"square ship\" : \"square noship\"}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;\n","import React from \"react\";\n\nfunction Gamelog(props) {\n  return (\n    <div id=\"gamelog\">\n      {props.gamelog.map((i, index) => (\n        <div key={index}>{i}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default Gamelog;\n","import React, { Component } from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport \"./App.css\";\nimport Gameboard from \"./Gameboard\";\nimport Ship from \"./Ship\";\nimport Player from \"./Player\";\nimport Square from \"./Square\";\nimport Gamelog from \"./Gamelog\";\n\nconst arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      player: Player(Gameboard()),\n      enemy: Player(Gameboard()),\n      gamelog: [\"Would you like to play a game of Battleship?\"],\n      initialState: null,\n      gameOver: false,\n    };\n    this.state.player.gameboard.placeShip(Ship(2), 8, 2, 1, 0);\n    this.state.player.gameboard.placeShip(Ship(3), 5, 5, 0, 1);\n    this.state.player.gameboard.placeShip(Ship(3), 2, 6, 0, 1);\n    this.state.player.gameboard.placeShip(Ship(4), 8, 6, 0, 1);\n    this.state.player.gameboard.placeShip(Ship(5), 0, 0, 1, 0);\n    this.state.enemy.gameboard.placeShip(Ship(2), 8, 2, 0, 1);\n    this.state.enemy.gameboard.placeShip(Ship(3), 5, 5, 0, 1);\n    this.state.enemy.gameboard.placeShip(Ship(3), 2, 6, 1, 0);\n    this.state.enemy.gameboard.placeShip(Ship(4), 8, 6, 0, 1);\n    this.state.enemy.gameboard.placeShip(Ship(5), 0, 0, 1, 0);\n    this.handleClick = this.handleClick.bind(this);\n    this.state.initialState = cloneDeep(this.state);\n  }\n  handleClick(xCoor, yCoor) {\n    this.setState((state) => {\n      let newTurn = cloneDeep(state);\n      newTurn.enemy.gameboard.attacks[xCoor][yCoor] = \"X\";\n      if (newTurn.enemy.gameboard.allShipsSunk()) {\n        newTurn.gameOver = true;\n      }\n      return {\n        enemy: cloneDeep(newTurn.enemy),\n        gameOver: newTurn.gameOver,\n      };\n    });\n    if (!this.gameOver) {\n      this.setState((state) => {\n        return {\n          gamelog: state.gamelog.concat(\"You attacked \" + xCoor + \", \" + yCoor),\n        };\n      });\n      if (this.state.enemy.gameboard.checkShipHit(xCoor, yCoor)) {\n        this.setState((state) => {\n          return {\n            gamelog: state.gamelog.concat(\"It was a hit!\"),\n          };\n        });\n      }\n      this.enemyTurn();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.gameOver !== this.state.gameOver) {\n      this.resetBoard();\n    }\n  }\n\n  resetBoard() {\n    this.setState({\n      player: cloneDeep(this.state.initialState.player),\n      enemy: cloneDeep(this.state.initialState.enemy),\n      gamelog: cloneDeep(this.state.initialState.gamelog),\n      initialState: cloneDeep(this.state.initialState),\n      gameOver: false,\n    });\n  }\n\n  enemyTurn() {\n    let xCoorEnemy = Math.floor(Math.random() * 10);\n    let yCoorEnemy = Math.floor(Math.random() * 10);\n    while (\n      this.state.player.gameboard.attacks[xCoorEnemy][yCoorEnemy] === \"X\"\n    ) {\n      xCoorEnemy = Math.floor(Math.random() * 10);\n      yCoorEnemy = Math.floor(Math.random() * 10);\n    }\n    this.setState((state) => {\n      let newTurn = cloneDeep(state);\n      newTurn.player.gameboard.attacks[xCoorEnemy][yCoorEnemy] = \"X\";\n      return {\n        player: cloneDeep(newTurn.player),\n      };\n    });\n    this.setState((state) => {\n      return {\n        gamelog: state.gamelog.concat(\n          \"Computer attacked \" + xCoorEnemy + \", \" + yCoorEnemy\n        ),\n      };\n    });\n    if (this.state.player.gameboard.checkShipHit(xCoorEnemy, yCoorEnemy)) {\n      this.setState((state) => {\n        return {\n          gamelog: state.gamelog.concat(\"It was a hit!\"),\n        };\n      });\n    }\n  }\n  renderPlayerSquare(xCoor, yCoor) {\n    return (\n      <Square\n        value={this.state.player.gameboard.attacks[xCoor][yCoor]}\n        isShip={this.state.player.gameboard.shipsOnBoard[xCoor][yCoor]}\n        key={\"friend-sqaure-\" + (xCoor + yCoor * 10)}\n      />\n    );\n  }\n  renderPlayerRow(yCoor) {\n    return (\n      <div key={\"player-row-\" + yCoor} className=\"row\">\n        {arr.map((i) => this.renderPlayerSquare(i, yCoor))}\n      </div>\n    );\n  }\n  renderEnemySquare(xCoor, yCoor) {\n    return (\n      <Square\n        value={this.state.enemy.gameboard.attacks[xCoor][yCoor]}\n        isShip={\n          this.state.enemy.gameboard.shipsOnBoard[xCoor][yCoor] &&\n          this.state.enemy.gameboard.attacks[xCoor][yCoor] === \"X\"\n        }\n        onClick={\n          this.state.enemy.gameboard.attacks[xCoor][yCoor] === \"\"\n            ? () => this.handleClick(xCoor, yCoor)\n            : () => {}\n        }\n        key={\"enemy-sqaure-\" + (xCoor + yCoor * 10)}\n      />\n    );\n  }\n  renderEnemyRow(yCoor) {\n    return (\n      <div key={\"enemy-row-\" + yCoor} className=\"row\">\n        {arr.map((i) => this.renderEnemySquare(i, yCoor))}\n      </div>\n    );\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>Your Ships:</h3>\n        <div className=\"board\">{arr.map((i) => this.renderPlayerRow(i))}</div>\n        <h3>Attacks:</h3>\n        <div className=\"board\">{arr.map((i) => this.renderEnemyRow(i))}</div>\n        <Gamelog gamelog={this.state.gamelog} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}